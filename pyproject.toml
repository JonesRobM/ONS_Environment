[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ons-employment"
version = "0.1.0"
description = "ONS Employment data analysis using machine learning and deep learning techniques"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["data-science", "machine-learning", "pytorch", "ons", "employment"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core data science
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",

    # Machine learning - shallow learning
    "scikit-learn>=1.3.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",

    # Deep learning - PyTorch
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",

    # Visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",

    # Jupyter and notebooks
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "ipywidgets>=8.0.0",

    # Data validation and preprocessing
    "pydantic>=2.0.0",
    "openpyxl>=3.1.0",  # For Excel file support

    # Progress bars and utilities
    "tqdm>=4.65.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",

    # Code quality
    "black>=23.7.0",
    "ruff>=0.0.280",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",

    # Type stubs
    "pandas-stubs>=2.0.0",
    "types-tqdm>=4.65.0",
]

nlp = [
    # NLP capabilities (optional)
    "transformers>=4.30.0",
    "tokenizers>=0.13.0",
]

gpu = [
    # GPU-accelerated versions
    "cupy>=12.0.0",  # CUDA-accelerated NumPy
]

all = [
    "ons-employment[dev,nlp,gpu]",
]

[project.urls]
Homepage = "https://github.com/yourusername/ons-employment"
Repository = "https://github.com/yourusername/ons-employment"
Documentation = "https://github.com/yourusername/ons-employment/blob/main/README.md"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
